package com.company.sakila.generated;

import com.company.sakila.SakilaApplication;
import com.company.sakila.SakilaApplicationBuilder;
import com.company.sakila.SakilaApplicationImpl;
import com.company.sakila.SakilaInjectorProxy;
import com.company.sakila.sakila.sakila.film.FilmManagerImpl;
import com.company.sakila.sakila.sakila.film.FilmSqlAdapter;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.application.AbstractApplicationBuilder;
import com.speedment.runtime.connector.mysql.MySqlBundle;

/**
 * A generated base {@link
 * com.speedment.runtime.application.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named sakila.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSakilaApplicationBuilder extends AbstractApplicationBuilder<SakilaApplication, SakilaApplicationBuilder> {
    
    protected GeneratedSakilaApplicationBuilder() {
        super(SakilaApplicationImpl.class, GeneratedSakilaMetadata.class);
        withManager(FilmManagerImpl.class);
        withComponent(FilmSqlAdapter.class);
        withBundle(MySqlBundle.class);
        withInjectorProxy(new SakilaInjectorProxy());
    }
    
    @Override
    public SakilaApplication build(Injector injector) {
        return injector.getOrThrow(SakilaApplication.class);
    }
}